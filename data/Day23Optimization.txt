set b 81
set c b
jnz a 2             # IF a != 0 => Part 2 - Skips the next jump
jnz 1 5             # ELSE Part 1 - Skips the initialization
    mul b 100       
    sub b -100000   # b = (b * 100) + 100000
    set c b
    sub c -17000    # c = b + 17000
set f 1                         # Outermoset loop
    set d 2
        set e 2                 # Middle loop
            set g d             # Innermost loop
                mul g e
                sub g b
                jnz g 2         
                    set f 0
                sub e -1
                set g e
                sub g b
            jnz g -8            # IF g != 0 then repeat Innermost loop
        sub d -1
        set g d
        sub g b
        jnz g -13               # If g != 0 then repeat Middle loop
    jnz f 2                     # IF f == 0 then 
        sub h -1                # THEN increase h by one
    set g b                     # 
    sub g c                     # g -= c, programs ends when g = 0 (next line)
    jnz g 2                     # IF g != 0 increase b by 17 ELSE end program 
    jnz 1 3                     # END PROGRAM
    sub b -17                   # Increase by by 17
jnz 1 -23                       # Repeat Outermost loop

===============================

set b 81
set c b
jnz a 2             # IF a != 0 => Part 2 - Skips the next jump
jnz 1 5             # ELSE Part 1 - Skips the initialization
    mul b 100       
    sub b -100000   # b = (b * 100) + 100000
    set c b
    sub c -17000    # c = b + 17000
set f 1                         # Outermoset loop
    set d 2
        set e 2                 # Middle loop
            set g d             # Innermost loop
                mul g e
                sub g b
                jnz g 2
                    set f 0     # f = 0 IF d * e == b
                sub e -1
                set g e
                sub g b
            jnz g -8            # IF g != 0 then repeat Innermost loop - g = e + 1 - b
        sub d -1
        set g d
        sub g b
        jnz g -13               # If g != 0 then repeat Middle loop
    jnz f 2                     # IF f == 0 then 
        sub h -1                # THEN increase h by one
    set g b                     # 
    sub g c                     # g -= c, programs ends when g = 0 (next line)
    jnz g 2                     # IF g != 0 increase b by 17 ELSE end program 
    jnz 1 3                     # END PROGRAM
    sub b -17                   # Increase by by 17
jnz 1 -23                       # Repeat Outermost loop

===============================

This helped: https://www.reddit.com/r/adventofcode/comments/7lms6p/2017_day_23_solutions/drnjwq7/

Line 15: What we are really checking is that if b is a composite number? (https://en.wikipedia.org/wiki/Composite_number)
While e != b or rather while e < b

Inner loop checks each number d = 2, e += 1 while e < b
Middle loop increases d by one and check each e again...

Composite number is not a Prime (See wiki)

Outermost loop does something with b: b += 17 (line 31), are b and c our boundaries?

c = b - 17000, b is increased by 17 = 1000 iterations

b = 108100
c = 125100

result = 0
for (int b = 108100; b <= c; b += 17)
    if !isPrime(b) result += 1